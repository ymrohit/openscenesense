# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Test and Upload Python Package

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v5.3.0
        with:
          python-version: '3.10'
      - name: Install system deps (ffmpeg)
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg
      - name: Install project (editable)
        run: |
          python -m pip install --upgrade pip
          pip install -e .
      - name: Smoke import test
        run: |
          python - << 'PY'
          import openscenesense as oss
          print('openscenesense', oss.__version__)
          PY
      - name: Run integration matrix (if secrets set)
        if: ${{ secrets.OPENAI_API_KEY && secrets.OPENROUTER_API_KEY }}
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        run: |
          # Use the bundled videos for deterministic tests
          python tests/run_matrix.py

  deploy:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5.3.0
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
      - name: Build package
        run: python -m build
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
